#!/bin/bash
#
# Checks if any ZFS pool is nearing full capacity and sends an email alert.
# 
# Original author: Tim West <tim@greenmtnit.com>
#
# Copyright (C) 2021 Green Mountain IT Solutions, LLC <info@greenmtnit.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

PROGNAME=$(basename "$0")
readonly PROGNAME

PROGDIR=$(readlink -m "$(dirname "$0")")
readonly PROGDIR

# Print an error message to stderr in red
print_err() {
  tput setaf 1
  printf -- '[ERROR] %s\n' "${*}" >&2
  tput sgr0
}

# Print an error message in red and exit the script
die() {
  print_err "${*}"
  exit 1
}

show_help() {
    cat <<EOF
    Usage: $PROGNAME options

    This script checks the used capacity of all ZFS pools on the system.
    It sends an email alert if used capacity exceeds a certain percentage (default 75%).

    Options:
       -p --percent-used      Used space percentage threshold to alert (default 75%)
       -d --dest              Destination to send email alerts to. 
       -t --test              Send a test email
       -h --help              Show this help.

    
    Examples:
       Check if any zpools have more than 80% capacity used and send an email to me@mydonain.com if they do:
       $PROGNAME -p 80 -d me@mydomain.com
EOF
}

# Initialize all the option variables.
# This ensures we are not contaminated by variables from the environment.
dest_addr=
max_percent="75"
do_test=

if [[ -z "$1" ]]; then
  print_err "No arguments given. This program requires arguments."
  show_help
  exit 
fi

while :; do
    case $1 in
        -h|-\?|--help)
            show_help    # Display a usage synopsis.
            exit
            ;;
        -p|--percent-used)       # Threshold for used percent, above which an alert will be sent.
            if [[ -z "$2" ]]; then
                die 'ERROR: "--percent-used" requires a non-empty option argument.'
	    elif [[ "$2" =~ ^[0-9]+$ && "$2" -ge 1 && "$2" -le 99 ]]; then
                max_percent="$2"
                shift
            else
                die 'ERROR: "--percent-used" requires a number between 1 and 99.'
            fi
            ;;
        -d|--dest)       # Destination email address for alerts.
            if [[ "$2" ]]; then
                dest_addr="$2"
                shift
            else
                die 'ERROR: "--dest" requires a non-empty option argument.'
            fi
            ;;
        -t|--test)       # Destination email address for alerts.
            do_test="1"
            ;;
        --)              # End of all options.
            shift
            break
            ;;
        -?*)
            printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
            ;;
        *)               # Default case: No more options, so break out of the loop.
            break
    esac
    shift
done

check_options() {
  if [[ -z "$dest_addr" ]]; then
    print_err "You must set a destination email address using --dest."
    show_help
    exit 1
  fi
}

send_email_alert() {
  local subject
  subject="ZFS Capacity Alert on $(hostname -f)"
  local message
  message="Warning! The used capacity on one or more ZFS pools on $(hostname -f) is greater than $max_percent%. Time: $(date '+%a %Y%m%d %H:%M:%S')."
  echo "$message" | mail -s "$subject" "$dest_addr" 
}

run_test() {
  if [[ -n "$do_test" ]]; then
    local subject
    subject="TEST ZFS Capacity Alert on $(hostname -f)"
    local message
    message="THIS IS ONLY A TEST. Warning! The used capacity on one or more ZFS pools on $(hostname -f) is greater than $max_percent%. Time: $(date '+%a %Y%m%d %H:%M:%S')."
    echo "$message" | mail -s "$subject" "$dest_addr" 
  fi
}

check_zfs_capacity() {
  readarray zpool_used  < <(/sbin/zpool list |awk -F ' ' 'FNR == 1 {next} {gsub(/\%/, " ", $8)} {print $8}')
  for i in "${zpool_used[@]}"
  do
    if (( $i > "$max_percent" )); then
      send_email_alert
    fi
  done
}

main() {
  check_options
  run_test
  check_zfs_capacity
}

main
